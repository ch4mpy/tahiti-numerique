scheme: http
oauth2-issuer: https://dev-ch4mpy.eu.auth0.com/
oauth2-client-id: change-me
oauth2-client-secret: change-me

gateway-uri: ${scheme}://localhost:${server.port}
greetings-api-uri: ${scheme}://localhost:7084
users-api-uri: ${scheme}://localhost:7085
# en dev: https://openid-training.c4-soft.com (pour le deep link Android), http://localhost:3002 ou http://localhost:3003
# en prod: https://openid-training.c4-soft.com
ui-host: http://localhost:3002
ui-path: /back-office/web
allowed-origins:
- http://localhost:3002
- http://localhost:3003
- https://localhost:3402
- https://localhost:3403

server:
  port: 8080
  shutdown: graceful
  ssl:
    enabled: false

spring:
  config:
    import:
    - optional:configtree:/workspace/config/
    - optional:configtree:/workspace/secret/
  lifecycle:
    timeout-per-shutdown-phase: 30s
  security:
    oauth2:
      client:
        provider:
          oauth2:
            issuer-uri: ${oauth2-issuer}
        registration:
          authorization-code:
            authorization-grant-type: authorization_code
            client-id: ${oauth2-client-id}
            client-secret: ${oauth2-client-secret}
            provider: oauth2
            scope:
            - openid
            - profile
            - email
            - offline_access
  cloud:
    gateway:
      default-filters:
      - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      routes:
      - id: home
        uri: ${gateway-uri}
        predicates:
        - Path=/
        filters:
        - RedirectTo=301,${gateway-uri}/ui
      - id: ui
        uri: ${ui-host}
        predicates:
        - Path=${ui-path}
      - id: redirect-to-app
        uri: ${ui-host}
        predicates:
        - Path=${ui-path}/app
        filters:
        - RedirectTo=301,${ui-host}${ui-path}/app
      - id: greetings-api
        uri: ${greetings-api-uri}
        predicates:
        - Path=/api/v1/greetings/**
        filters:
        - StripPrefix=2
      - id: greetings-bff
        uri: ${greetings-api-uri}
        predicates:
        - Path=/bff/v1/greetings/**
        filters:
        - TokenRelay=
        - SaveSession
        - StripPrefix=2
      - id: users-api
        uri: ${users-api-uri}
        predicates:
        - Path=/api/v1/users/**
        filters:
        - StripPrefix=2
      - id: users-bff
        uri: ${users-api-uri}
        predicates:
        - Path=/bff/v1/users/**
        filters:
        - TokenRelay=
        - SaveSession
        - StripPrefix=2
      - id: letsencrypt
        uri: https://cert-manager-webhook
        predicates:
        - Path=/.well-known/acme-challenge/**

com:
  c4-soft:
    springaddons:
      security:
        # Global OAuth2 configuration
        issuers:
        - location: ${oauth2-issuer}
          username-claim: $['https://c4-soft.com/user']['name']
          authorities:
          - path: $['https://c4-soft.com/user']['roles']
          - path: $.scope
            prefix: SCOPE_
        # OAuth2 client configuration
        client:
          client-uri: ${gateway-uri}
          security-matchers:
          - /login/**
          - /oauth2/**
          - /
          - /logout
          - /api/**
          - /bff/**
          - ${ui-path}/**
          permit-all:
          - /login/**
          - /oauth2/**
          - /
          - /api/**
          - /bff/**
          - ${ui-path}/**
          csrf: cookie-accessible-from-js
          post-login-redirect-path: /ui/
          post-logout-redirect-path: /ui/
          back-channel-logout-enabled: true
          oauth2-logout:
          - client-registration-id: authorization-code
            uri: ${oauth2-issuer}v2/logout
            client-id-request-param: client_id
            post-logout-uri-request-param: returnTo
        # OAuth2 resource server configuration
        csrf: disable
        statless-sessions: true
        cors:
        - path: /api/**
          allowed-origins: ${allowed-origins}
        permit-all:
        - /v3/api-docs/**
        - /actuator/health/readiness
        - /actuator/health/liveness
        - /.well-known/acme-challenge/**
            
management:
  endpoint:
    health:
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

logging:
  level:
    root: INFO
    org:
      springframework:
        security: INFO
    
---
spring:
  config:
    activate:
      on-profile: ssl
  cloud:
    gateway:
      default-filters:
      - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      - SecureHeaders
server:
  ssl:
    enabled: true

scheme: https